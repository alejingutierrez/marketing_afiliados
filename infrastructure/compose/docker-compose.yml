version: '3.9'
services:
  api:
    build:
      context: ../..
      dockerfile: apps/api/Dockerfile
    command: pnpm --filter @marketing-afiliados/api run start:dev
    env_file:
      - ../../apps/api/.env.local
      - ../../.env.shared
    environment:
      - METRICS_API_KEY=
    depends_on:
      - postgres
      - redis
    ports:
      - "4701:3001"
    volumes:
      - ../..:/srv/app
    restart: unless-stopped

  web:
    build:
      context: ../..
      dockerfile: apps/web/Dockerfile
    command: pnpm --filter @marketing-afiliados/web run dev
    env_file:
      - ../../apps/web/.env.local
      - ../../.env.shared
    depends_on:
      - api
    ports:
      - "4700:3000"
    volumes:
      - ../..:/srv/app
    restart: unless-stopped

  worker:
    build:
      context: ../..
      dockerfile: apps/worker/Dockerfile
    command: pnpm --filter @marketing-afiliados/worker run dev
    env_file:
      - ../../apps/worker/.env.local
      - ../../.env.shared
    environment:
      - WORKER_METRICS_PORT=9465
      - BACKUP_INTERVAL_MS=900000
    depends_on:
      - postgres
      - redis
    volumes:
      - ../..:/srv/app
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: marketing_afiliados
      POSTGRES_USER: marketing
      POSTGRES_PASSWORD: marketing
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  mailhog:
    image: mailhog/mailhog:v1.0.1
    ports:
      - "4125:1025"
      - "9125:8025"

  prometheus:
    image: prom/prometheus:v2.52.0
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ../monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - '9090:9090'
    depends_on:
      - api
      - worker

  grafana:
    image: grafana/grafana:9.5.2
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    volumes:
      - ../monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ../monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    ports:
      - '4790:3000'
    depends_on:
      - prometheus

volumes:
  postgres_data:
  redis_data:
